jobs:
  build-docker-images:
    if: ${{ needs.changes.outputs.e2e == 'true' }}
    needs: changes
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        submodules: true
    - continue-on-error: true
      name: Free disk space
      run: 'df --human-readable

        sudo apt clean

        docker rmi $(docker image ls --all --quiet)

        rm --recursive --force "$AGENT_TOOLSDIRECTORY"

        df --human-readable

        '
    - continue-on-error: true
      name: Set up JDK 17 for Building ShenYu
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      id: filter
      uses: dorny/paths-filter@v2
      with:
        filters: .github/filters.yml
        list-files: json
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Build with Maven
      run: ./mvnw -B clean install -Prelease,docker -Dmaven.javadoc.skip=true -B -Drat.skip=true
        -Dmaven.test.skip=true -Djacoco.skip=true -DskipITs -DskipTests package -T1C
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true' && steps.restore-maven-cache.outputs.cache-hit
        != 'true'
      name: Save ShenYu Maven Repos
      uses: actions/cache/save@v3
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Build Docker Image
      run: 'docker save apache/shenyu-bootstrap:latest > /tmp/apache-shenyu-bootstrap.tar

        docker save apache/shenyu-admin:latest > /tmp/apache-shenyu-admin.tar

        '
    - continue-on-error: true
      name: Upload Docker Image Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: shenyu-images
        path: /tmp/apache-shenyu-*.tar
        retention-days: 1
  changes:
    outputs:
      e2e: ${{ steps.filter.outputs.e2e }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        submodules: true
    - continue-on-error: true
      name: Free disk space
      run: 'df --human-readable

        sudo apt clean

        docker rmi $(docker image ls --all --quiet)

        rm --recursive --force "$AGENT_TOOLSDIRECTORY"

        df --human-readable

        '
    - continue-on-error: true
      id: filter
      uses: dorny/paths-filter@v2
      with:
        filters: .github/filters.yml
        list-files: json
  e2e-case:
    if: (github.repository == 'apache/shenyu' && ${{ needs.changes.outputs.e2e ==
      'true' }})
    needs:
    - changes
    - build-docker-images
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: true
    - continue-on-error: true
      name: Free disk space
      run: 'df --human-readable

        sudo apt clean

        docker rmi $(docker image ls --all --quiet)

        rm --recursive --force "$AGENT_TOOLSDIRECTORY"

        df --human-readable

        rm -rf /tmp/shenyu

        mkdir -p /tmp/shenyu

        '
    - continue-on-error: true
      id: filter
      uses: dorny/paths-filter@v2
      with:
        filters: .github/filters.yml
        list-files: json
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Install k8s
      run: 'curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=777 sh -

        cat /etc/rancher/k3s/k3s.yaml

        mkdir -p ~/.kube

        cp /etc/rancher/k3s/k3s.yaml ~/.kube/config

        '
    - continue-on-error: true
      name: Set up JDK 17 for Building ShenYu
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Restore ShenYu Maven Repos
      uses: actions/cache/restore@v3
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Build examples with Maven
      run: ./mvnw -B clean install -Pexample -Dmaven.javadoc.skip=true -Dmaven.test.skip=true
        -am -f ./shenyu-examples/pom.xml
    - continue-on-error: true
      uses: actions/download-artifact@v3
      with:
        name: shenyu-images
        path: /tmp/shenyu/
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Build k8s Cluster
      run: 'sudo k3s ctr images import /tmp/shenyu/apache-shenyu-admin.tar

        sudo k3s ctr images import /tmp/shenyu/apache-shenyu-bootstrap.tar

        '
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Run E2E Tests
      run: 'bash ./shenyu-e2e/shenyu-e2e-case/${{ matrix.case }}/k8s/script/${{ matrix.script
        }}.sh

        '
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Cluster Test after Healthcheck
      run: 'kubectl get all

        kubectl get events --all-namespaces

        '
    strategy:
      matrix:
        include:
        - case: shenyu-e2e-case-http
          script: e2e-http-sync
        - case: shenyu-e2e-case-spring-cloud
          script: e2e-springcloud-sync
        - case: shenyu-e2e-case-apache-dubbo
          script: e2e-apache-dubbo-sync
        - case: shenyu-e2e-case-sofa
          script: e2e-sofa-sync
        - case: shenyu-e2e-case-grpc
          script: e2e-grpc-sync
        - case: shenyu-e2e-case-websocket
          script: e2e-websocket-sync
  e2e-storage:
    if: (github.repository == 'apache/shenyu' && ${{ needs.changes.outputs.e2e ==
      'true' }})
    needs:
    - changes
    - build-docker-images
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: true
    - continue-on-error: true
      name: Free disk space
      run: 'df --human-readable

        sudo apt clean

        docker rmi $(docker image ls --all --quiet)

        rm --recursive --force "$AGENT_TOOLSDIRECTORY"

        df --human-readable

        rm -rf /tmp/shenyu

        mkdir -p /tmp/shenyu

        '
    - continue-on-error: true
      id: filter
      uses: dorny/paths-filter@v2
      with:
        filters: .github/filters.yml
        list-files: json
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Install k8s
      run: 'curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=777 sh -

        cat /etc/rancher/k3s/k3s.yaml

        mkdir -p ~/.kube

        cp /etc/rancher/k3s/k3s.yaml ~/.kube/config

        '
    - continue-on-error: true
      name: Set up JDK 17 for Building ShenYu
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Restore ShenYu Maven Repos
      uses: actions/cache/restore@v3
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      uses: actions/download-artifact@v3
      with:
        name: shenyu-images
        path: /tmp/shenyu/
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Build k8s Cluster
      run: 'sudo k3s ctr images import /tmp/shenyu/apache-shenyu-admin.tar

        sudo k3s ctr images import /tmp/shenyu/apache-shenyu-bootstrap.tar

        '
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Run E2E Tests
      run: 'bash ./shenyu-e2e/shenyu-e2e-case/${{ matrix.case }}/k8s/script/${{ matrix.script
        }}.sh

        '
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Cluster Test after Healthcheck
      run: 'kubectl get all

        kubectl get events --all-namespaces

        kubectl logs -l app=shenyu-admin-mysql

        '
    strategy:
      matrix:
        include:
        - case: shenyu-e2e-case-storage
          script: e2e-h2
        - case: shenyu-e2e-case-storage
          script: e2e-mysql
        - case: shenyu-e2e-case-storage
          script: e2e-postgres
        - case: shenyu-e2e-case-storage
          script: e2e-opengauss
  requirement:
    if: ${{ needs.changes.outputs.e2e == 'true' }}
    name: e2e
    needs:
    - changes
    - e2e-storage
    - e2e-case
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: checking job status
      run: '[[ "${{ needs.e2e-storage.result }}" == "success" ]] || exit -1

        [[ "${{ needs.e2e-case.result }}" == "success" ]] || exit -1

        '
name: e2e
on:
  repository_dispatch:
    types: trigger-ga___e2e-k8s.yml
