jobs:
  k8s-examples-http:
    if: (github.repository == 'apache/shenyu')
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        submodules: true
    - continue-on-error: true
      name: Free disk space
      run: 'df --human-readable

        sudo apt clean

        docker rmi $(docker image ls --all --quiet)

        rm --recursive --force "$AGENT_TOOLSDIRECTORY"

        df --human-readable

        '
    - continue-on-error: true
      id: filter
      uses: dorny/paths-filter@v2
      with:
        filters: .github/filters.yml
        list-files: json
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Install k8s
      run: 'curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=777 sh -

        cat /etc/rancher/k3s/k3s.yaml

        mkdir -p ~/.kube

        cp /etc/rancher/k3s/k3s.yaml ~/.kube/config

        '
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Restore ShenYu Maven Repos
      uses: actions/cache/restore@v3
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Build with Maven
      run: ./mvnw -B clean install -Prelease,docker -Dmaven.javadoc.skip=true -Dmaven.test.skip=true
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Build examples
      run: ./mvnw -B clean install -Pexample -Dmaven.javadoc.skip=true -Dmaven.test.skip=true
        -f ./shenyu-examples/pom.xml
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Build k8s Cluster
      run: 'docker save apache/shenyu-admin:latest apache/shenyu-bootstrap:latest
        shenyu-examples-http:latest | sudo k3s ctr images import -

        kubectl apply -f ./shenyu-examples/shenyu-examples-http/k8s/shenyu-deployment.yml

        kubectl apply -f ./shenyu-examples/shenyu-examples-http/k8s/shenyu-service.yml

        kubectl apply -f ./shenyu-examples/shenyu-examples-http/k8s/shenyu-zookeeper.yml

        kubectl apply -f ./shenyu-examples/shenyu-examples-http/k8s/shenyu-examples-http.yml

        '
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Wait for k8s Cluster Start up
      run: 'bash ./shenyu-examples/shenyu-examples-http/k8s/script/healthcheck.sh

        '
    - continue-on-error: true
      if: steps.filter.outputs.changed == 'true'
      name: Cluster Test after Healthcheck
      run: 'kubectl get all

        kubectl get events --all-namespaces

        kubectl logs -l all=shenyu-examples-http

        '
name: k8s-examples-http
on:
  repository_dispatch:
    types: trigger-ga___k8s-examples-http.yml
